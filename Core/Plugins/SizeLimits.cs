using System;
using System.Collections.Generic;
using System.Text;
using System.Drawing;

namespace fbs.ImageResizer.Resizing {
    public class SizeLimits {

        public class SizeLimitException : ApplicationException {
            public SizeLimitException(string message) : base(message) { }
        }
        public SizeLimits() {
        }

        public void ValidateTotalSize(Size total) {
            if (!FitsInsideTotalSize(total)) 
                throw new SizeLimitException("The dimensions of the output image (" + total.Width + "x" + total.Height +
                                ") exceed the maximum permitted dimensions of " + TotalSize.Width + "x" + TotalSize.Height + ".");
        }

        public bool FitsInsideTotalSize(Size s) {
            return (s.Width < totalSize.Width && s.Height < totalSize.Height);
        }

        public enum TotalSizeBehavior {
            ThrowException,
            IgnoreLimits
        }
        protected Size totalSize = new Size(3200,3200);
        /// <summary>
        /// The maximum final size an image generated by ImageBuilder can be.  
        /// </summary>
        public Size TotalSize {
            get { return totalSize; }
            set {  totalSize = value; }
        }
        protected TotalSizeBehavior totalBehavior = TotalSizeBehavior.ThrowException;
        /// <summary>
        /// What action to take when the total size of the final image would exceed the TotalSize value
        /// </summary>
        public TotalSizeBehavior TotalBehavior {
            get { return totalBehavior; }
            set {   totalBehavior = value; }
        }

        protected Size imageSize = new Size(1680,1680);
        /// <summary>
        /// The maximum size an un-rotated image can be drawn when creating a resized image. Rotation will increase the total size, as will any borders, paddings, margins, or effects. Not effective at prevent attacks, use totalSize.
        /// If larger values are specified in a querystring, they will automatically be scaled to fit within these dimensions.
        /// </summary>
        public Size ImageSize {
            get { return imageSize; }
            set { imageSize = value; }
        }



    }
}
