Refactor Watermark plugin to use named configurations.
Add debug=true querystring command to Diagnostics plugin.
Add better usage examples.
Add assembly-based trial version detection (#ifdef in SharedAssemblyInfo.cs)
Make diagnostics page work with ASP.NET MVC.


Add another image resizing pitfall....

ImageFormat.Gif.Equals(f)
true
ImageFormat.Gif == f
false


Add rounded corners plugin:
/// <summary>
        /// Rounds the corner of the image default cornering of the image precentage is 50%
        /// </summary>
        /// <param name="imagePath"></param>
        /// <param name="roundPrecentage"></param>
        public static bool Round(string imagePath, int roundPrecentage, Color backgroundColour)
        {
            Bitmap bitmapToSave = null;

            using (Image image = Image.FromFile(imagePath))
            {
                Bitmap bitmap = new Bitmap(image.Width, image.Height);

                Graphics graphics = Graphics.FromImage(bitmap);

                graphics.Clear(backgroundColour);

                graphics.SmoothingMode = SmoothingMode.AntiAlias;

                Brush brush = new System.Drawing.TextureBrush(image);

                Rectangle rectangle = new Rectangle(0, 0, image.Width, image.Height);

                GraphicsPath graphicsPath = new GraphicsPath();
                graphicsPath.AddArc(rectangle.X, rectangle.Y, roundPrecentage, roundPrecentage, 180, 90);
                graphicsPath.AddArc(rectangle.X + rectangle.Width - roundPrecentage, rectangle.Y, roundPrecentage, roundPrecentage, 270, 90);
                graphicsPath.AddArc(rectangle.X + rectangle.Width - roundPrecentage, rectangle.Y + rectangle.Height - roundPrecentage, roundPrecentage, roundPrecentage, 0, 90);
                graphicsPath.AddArc(rectangle.X, rectangle.Y + rectangle.Height - roundPrecentage, roundPrecentage, roundPrecentage, 90, 90);
                graphics.FillPath(brush, graphicsPath);
                graphics.Dispose();
                bitmapToSave = (Bitmap)bitmap;
                //bitmap.Dispose();
                brush.Dispose();
                graphicsPath.Dispose();

            }

            if (OverWrite(imagePath, bitmapToSave))
                return true;

            return false;
        }
