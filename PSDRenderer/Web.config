<?xml version="1.0"?>
<configuration>

  <appSettings>
    <!-- The directory to store cached version of images. Relative to the application root -->
    <add key="ImageDiskCacheDir" value="imagecache"/>
    <!-- How many files to keep in the cache. The 10% least recently used files will be deleted when this limit is reached-->
    <add key="MaxCachedImages" value="80000"/>
    <!-- The maximum size to permit images to be resized to. -->
    <add key="ImageResizerMaxWidth" value="1680"/>
    <add key="ImageResizerMaxHeight" value="1680"/>
    <!-- This setting only takes effect in version 1.2. The default is 1440. Set to 0 to disable.-->
    <add key="ImageResizerClientCacheMinutes" value="0"/>

    <!-- This enables /resize(x,y,f)/image.jpg notation in v1.2+, and allows ResizeExtension to be used in v2.1b+. 
    Was AllowFolderResizeNotation in 1.2, changed to AllowURLRewriting in v2.0.
    
    If you have a version *earlier* than 2.1b, realize that enabling this
    will make URL authorization ineffective on image files. 
    -->
    <add key="AllowURLRewriting" value="true"/>

    <!-- v2.2+ Disables modified date checking (i.e, cached files are never updated). Uses the registered VirutalPathProvider -->
    <add key="ImageResizerUseVirtualPathProvider" value ="true"/>
    <add key="ImageResizerUseVirtualPathProviderAsFallback" value ="false"/>

    <!-- (v2 only) Prevents use of cached files - useful for development when changing resizing algorithms. 
          Causes terrible performance - don't leave enabled.-->
    <add key="DiskCacheAlwaysInvalid" value="true"/>
    <!-- (v2 only) Prevents the cache cleanup routine from running. If you want to 
        manually purge the image cache yourself, and aren't worried about running out 
        of disk space via a DOS attack, you can disable this. Not advised. -->
    <add key="DisableCacheCleanup" value="false"/>


    <!-- Disabling custom quantization allows the resizer to function in low trust environments where managed pointer
     access and data type marshaling is prohibited. However, PNGs and BMPs can only be output in 32-bit mode, and GIFs will use the default h
     halftone pallete. Enable this if JPGs and PNGs work, but GIFs don't, and using colors=255 on PNGs causes them to break also.
     Causes much lower quality GIFs to be generated.
      Version 2.1+.    
    -->
    <add key ="DisableCustomQuantization" value="false"/>

    <!-- This allows images to be resized without any IIS configuration whatsoever. 
        Just set this value to ".ashx", ".axd", ".aspx" or any ASP.NET-registered extension, and
        add the same extension to your image URLs when you are resizing them.
        
        Ex. /images/media/flower.jpg -> /images/media/flower.jpg.cd?width=x&height=y

        AllowURLRewriting must be true. 
        
      Version 2.1b+.    
    -->
    <add key ="ResizeExtension" value=".ashx"/>


  </appSettings>
  <connectionStrings>
  <add name="database" connectionString="Data Source=.\SQLEXPRESS;AttachDbFilename=|DataDirectory|database.mdf;Integrated Security=True;User Instance=True" providerName="System.Data.SqlClient"/>
  </connectionStrings>
    <system.web>
        <compilation debug="true">

        </compilation>
        <!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
        <authentication mode="Windows" />
        <!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->

      <httpModules>
        <add name="ImageResizingModule" type="fbs.ImageResizer.InterceptModule"/>
      </httpModules>
    </system.web>
    <system.webServer>
      <validation validateIntegratedModeConfiguration="false"/>

      <modules>
        <add name="ImageResizingModule" type="fbs.ImageResizer.InterceptModule"/>
      </modules>
    </system.webServer>

</configuration>
