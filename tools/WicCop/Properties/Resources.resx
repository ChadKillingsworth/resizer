<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Actual" xml:space="preserve">
    <value>Actual</value>
  </data>
  <data name="BitmapDecoderInfoRule_Text" xml:space="preserve">
    <value>IWICBitmapDecoderInfo</value>
  </data>
  <data name="BitmapDecoderRule_Text" xml:space="preserve">
    <value>IWICBitmapDecoder</value>
  </data>
  <data name="BitmapSourceTransformRule_Text" xml:space="preserve">
    <value>IWICBitmapSourceTransform</value>
  </data>
  <data name="ContainerFormatsDoNotMatch" xml:space="preserve">
    <value>Container Formats reported thru IWICBitmapDecoderInfo and IWICBitmapDecoder don't match.</value>
  </data>
  <data name="DecoderAnimationIfMultiframe" xml:space="preserve">
    <value>The decoder can support animation only if it supports multiframe.</value>
  </data>
  <data name="DecoderDoesNotMultiframe" xml:space="preserve">
    <value>The decoder does not support multiframe but the file has several frames.</value>
  </data>
  <data name="DecoderUnsuportedPixelFormat" xml:space="preserve">
    <value>The decoder does not support the pixel format but the file has a frame in the pixel format.</value>
  </data>
  <data name="DevelopRawRule_Text" xml:space="preserve">
    <value>IWICDevelopRaw</value>
  </data>
  <data name="Expected" xml:space="preserve">
    <value>Expected</value>
  </data>
  <data name="FileNoFrames" xml:space="preserve">
    <value>The file with no frames found.</value>
  </data>
  <data name="FrameCount" xml:space="preserve">
    <value>Frame Count</value>
  </data>
  <data name="IncorrectDecoderPickedUp" xml:space="preserve">
    <value>Incorrect decoder is picked up.</value>
  </data>
  <data name="Index" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="IWICBitmapSourceTransform_ChangedPixelformat" xml:space="preserve">
    <value>IWICBitmapSourceTransform::GetClosestPixelFormat(...) should not change the pixel format if the pixel format of the frame is passed.</value>
  </data>
  <data name="IWICBitmapSourceTransform_ChangedSize" xml:space="preserve">
    <value>IWICBitmapSourceTransform::GetClosestSize(...) should not change the width and the height if the size of the frame is passed.</value>
  </data>
  <data name="NoFilesFor_0" xml:space="preserve">
    <value>{0} is not supported or/and no files that expose {0} are provided.</value>
  </data>
  <data name="PatternDuplicated" xml:space="preserve">
    <value>Duplicated patterns are specified.</value>
  </data>
  <data name="PatternIndex" xml:space="preserve">
    <value>Pattern Index</value>
  </data>
  <data name="PatternIndices" xml:space="preserve">
    <value>Pattern Indices</value>
  </data>
  <data name="PatternNo" xml:space="preserve">
    <value>No patterns are specified.</value>
  </data>
  <data name="PatternZeroLength" xml:space="preserve">
    <value>Zero length pattern is specified.</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="_0_Failed" xml:space="preserve">
    <value>{0} failed.</value>
  </data>
  <data name="_0_FailedWithIncorrectHRESULT" xml:space="preserve">
    <value>{0} failed with incorrect HRESULT.</value>
  </data>
  <data name="_0_IncorrectStatePalette" xml:space="preserve">
    <value>The palette left in the incorrect state after {0}.</value>
  </data>
  <data name="_0_NotExpectedValue" xml:space="preserve">
    <value>{0} returned not expected value.</value>
  </data>
  <data name="_0_NotSetValue" xml:space="preserve">
    <value>{0} returned not set value.</value>
  </data>
  <data name="_0_NULL" xml:space="preserve">
    <value>{0} returned NULL.</value>
  </data>
  <data name="_0_NULLItem" xml:space="preserve">
    <value>{0} returned an item with NULL value.</value>
  </data>
  <data name="_0_ShouldFail" xml:space="preserve">
    <value>{0} succeded but should fail.</value>
  </data>
  <data name="_0_ZeroColorPalette" xml:space="preserve">
    <value>{0} returned a zero color count pallete.</value>
  </data>
  <data name="_0_UnexpectedFieldValue" xml:space="preserve">
    <value>Unexpected value is specified in the field {0}.</value>
  </data>
  <data name="DevelopRawRule_NoNotification" xml:space="preserve">
    <value>IWICDevelopRawNotificationCallback::Notify(...) was not called upon the value set.</value>
  </data>
  <data name="DevelopRawRule_NotificationOnWrong" xml:space="preserve">
    <value>IWICDevelopRawNotificationCallback::Notify(...) was called on the different instance upon the value set.</value>
  </data>
  <data name="DevelopRaw_NoSupportedFeatures" xml:space="preserve">
    <value>IWICDevelopRaw::QueryRawCapabilitiesInfo(...) reported no supported features.</value>
  </data>
  <data name="Method" xml:space="preserve">
    <value>Method</value>
  </data>
  <data name="_0_File" xml:space="preserve">
    <value>*{0} file</value>
  </data>
  <data name="Amd64" xml:space="preserve">
    <value>x64</value>
  </data>
  <data name="BitmapEncoderInfoRule_Text" xml:space="preserve">
    <value>IWICBitmapEncoderInfo</value>
  </data>
  <data name="BitmapEncoderRule_Text" xml:space="preserve">
    <value>IWICBitmapEncoder</value>
  </data>
  <data name="BitmapFrameEncode_Text" xml:space="preserve">
    <value>IWICBitmapFrameEncode</value>
  </data>
  <data name="BothTreadingModelNotSupported" xml:space="preserve">
    <value>Both ThreadingModel is not supported.</value>
  </data>
  <data name="ChangedSupportedPixelFormat" xml:space="preserve">
    <value>{0} changed supported pixel format.</value>
  </data>
  <data name="ComRegistrationMissing" xml:space="preserve">
    <value>COM registration is missing.</value>
  </data>
  <data name="ComRule_Text" xml:space="preserve">
    <value>COM</value>
  </data>
  <data name="Decoders_Text" xml:space="preserve">
    <value>Decoders</value>
  </data>
  <data name="Destination" xml:space="preserve">
    <value>Destination</value>
  </data>
  <data name="DidNotChangeUnsupportedPixelFormat" xml:space="preserve">
    <value>{0} did not change the unsupported pixel format.</value>
  </data>
  <data name="Encoders_Text" xml:space="preserve">
    <value>Encoders</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>Filename</value>
  </data>
  <data name="FormatConverterInfoRule_Text" xml:space="preserve">
    <value>IWICFormatConverterInfo</value>
  </data>
  <data name="FrameIndex" xml:space="preserve">
    <value>Frame Index</value>
  </data>
  <data name="FromCannonicalNotSupported" xml:space="preserve">
    <value>Does not support conversion from a cannonical Pixel Format.</value>
  </data>
  <data name="Occurance" xml:space="preserve">
    <value>Occurance {0}</value>
  </data>
  <data name="Parameter" xml:space="preserve">
    <value>Parameter</value>
  </data>
  <data name="PixelFormat" xml:space="preserve">
    <value>Pixel Format</value>
  </data>
  <data name="PixelFormatConverterNotCreatable" xml:space="preserve">
    <value>The Pixel Format Converter is no createable.</value>
  </data>
  <data name="PixelFormatConverters_Text" xml:space="preserve">
    <value>Pixel Format Converters</value>
  </data>
  <data name="PixelFormats_Text" xml:space="preserve">
    <value>Pixel Formats</value>
  </data>
  <data name="ShellIntegrationRuleGroup_Text" xml:space="preserve">
    <value>Windows Shell Integration</value>
  </data>
  <data name="Source" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="SupportedPixelFormats" xml:space="preserve">
    <value>Supported Pixel Formats</value>
  </data>
  <data name="ToCannonicalNotSupported" xml:space="preserve">
    <value>Does not support conversion to a cannonical Pixel Format.</value>
  </data>
  <data name="X86" xml:space="preserve">
    <value>x86</value>
  </data>
  <data name="WowNotImplemented" xml:space="preserve">
    <value>Not implemented in WOW.</value>
  </data>
  <data name="CannotExtractIcon" xml:space="preserve">
    <value>The icon cannot be extracted.</value>
  </data>
  <data name="Channel" xml:space="preserve">
    <value>Channel</value>
  </data>
  <data name="DuplicatedChannelMask" xml:space="preserve">
    <value>Duplicate Channel Masks found.</value>
  </data>
  <data name="DuplicatedPixelFormat" xml:space="preserve">
    <value>Duplicated Pixel Formats are specified.</value>
  </data>
  <data name="InconsistentRegistryValue" xml:space="preserve">
    <value>Inconsistent registry value.</value>
  </data>
  <data name="InconsistentRegistryValueType" xml:space="preserve">
    <value>Inconsistent registry value type.</value>
  </data>
  <data name="IncorrectChannelMask" xml:space="preserve">
    <value>Channel Mask is incorrect.</value>
  </data>
  <data name="IncorrectMaskLegth" xml:space="preserve">
    <value>Mask Length is incorrect.</value>
  </data>
  <data name="Key" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="Mask" xml:space="preserve">
    <value>Mask</value>
  </data>
  <data name="MissingRegistryKey" xml:space="preserve">
    <value>The registry key is missing.</value>
  </data>
  <data name="MissingRegistryValue" xml:space="preserve">
    <value>The registry value is missing.</value>
  </data>
  <data name="NonRegisteredPixelFormat" xml:space="preserve">
    <value>Not-registered Pixel Formats are specified.</value>
  </data>
  <data name="NoNumericRepresention" xml:space="preserve">
    <value>NumericPresentation is not specified.</value>
  </data>
  <data name="NoPixelFormats" xml:space="preserve">
    <value>No Pixel Formats are specified.</value>
  </data>
  <data name="PhotoGalleryIntegrationRule_Text" xml:space="preserve">
    <value>Windows Photo Gallery Integration</value>
  </data>
  <data name="PixelFormatInfoRule_Text" xml:space="preserve">
    <value>IWICPixelFormatInfo</value>
  </data>
  <data name="ShellIntegrationRule_Text" xml:space="preserve">
    <value>Windows Explorer Integration</value>
  </data>
  <data name="ThumnailCacheIntegrationRule_Text" xml:space="preserve">
    <value>Thumnail Cache Integration</value>
  </data>
  <data name="WowKey" xml:space="preserve">
    <value>Wow Key</value>
  </data>
  <data name="ZeroBPP" xml:space="preserve">
    <value>Bits per pixel is zero.</value>
  </data>
  <data name="ZeroChannelCount" xml:space="preserve">
    <value>Channel Count is zero.</value>
  </data>
  <data name="CLSID" xml:space="preserve">
    <value>CLSID</value>
  </data>
  <data name="ComponentDisabled" xml:space="preserve">
    <value>The component is disabled.</value>
  </data>
  <data name="EmptyRegistryValue" xml:space="preserve">
    <value>Empty registry value.</value>
  </data>
  <data name="FileExtennsion" xml:space="preserve">
    <value>File Extension</value>
  </data>
  <data name="InconsistentComponentInfo" xml:space="preserve">
    <value>The instance of {0} returned by {1} does not match to the instace returned by IWICImagingFactory::GetComponnetInfo(...).</value>
  </data>
  <data name="InvalidGUIDRegistryValue" xml:space="preserve">
    <value>Registry value should a GUID.</value>
  </data>
  <data name="Mode" xml:space="preserve">
    <value>Mode</value>
  </data>
  <data name="PropertyStoreHandlerNotCreatable" xml:space="preserve">
    <value>The Property Store Handler is not creatable.</value>
  </data>
  <data name="PropertyStoreIntegrationRule_Text" xml:space="preserve">
    <value>Windows Property Store Integration</value>
  </data>
  <data name="RegistryValue_default" xml:space="preserve">
    <value>(default)</value>
  </data>
  <data name="UnexpectedRegistryValue" xml:space="preserve">
    <value>Unexpected registry value.</value>
  </data>
  <data name="UnexpectedRegistryValueType" xml:space="preserve">
    <value>Unexpected registry value type.</value>
  </data>
  <data name="Wow" xml:space="preserve">
    <value>WOW</value>
  </data>
  <data name="_0_DontMatchMask" xml:space="preserve">
    <value>{0} returned the value that does not match the mask.</value>
  </data>
  <data name="_0_Duplicated" xml:space="preserve">
    <value>{0} returned duplicated values</value>
  </data>
  <data name="_0_EmptyString" xml:space="preserve">
    <value>{0} returned an empty string.</value>
  </data>
  <data name="_0_ReservedGUID" xml:space="preserve">
    <value>{0} returned a reserved GUID.</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Done.</value>
  </data>
  <data name="Running" xml:space="preserve">
    <value>Running {0}...</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="WICCop" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\wiccop.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="PatternDoesnotMatchButPassed" xml:space="preserve">
    <value>The file pattern does not match but {0} passed.</value>
  </data>
</root>