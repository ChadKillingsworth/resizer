<?xml version="1.0"?>
<!-- 
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>



  <appSettings>
    <!-- The directory to store cached version of images. Relative to the application root -->
    <add key="ImageDiskCacheDir" value="imagecache" />

    <!-- How many files to keep in the cache. The 10% least recently used files will be deleted 
when this limit is reached. Don't set this lower than the number of images on your site. 2x the image count is a good default. 
 If you are getting "Access Denied" messages, this is the cuplrit - you need to increase it -->
    <add key="MaxCachedImages" value="8000" />

    <!-- The following settings are optional: -->

    <!-- The maximum size to permit images to be resized to. -->
    <add key="ImageResizerMaxWidth" value="1680" />
    <add key="ImageResizerMaxHeight" value="1680" />

    <!-- Takes effect in version 1.2. The default (for all versions) is 1440 minutes (24 hours).
        Set to 0 to disable *client* caching (304 "Not Modified" responses will still be returned 
        if nothing has changed). Client caching is not related to disk caching. -->
    <add key="ImageResizerClientCacheMinutes" value="1440" />

    <!-- This enables /resize(x,y,f)/image.jpg notation in v1.2+. Enabling this
      will make URL authorization ineffective on image files. -->
    <add key="AllowFolderResizeNotation" value="false" />

    <!-- This enables /resize(x,y,f)/image.jpg notation and other CustomFolders.cs 
rewriting (other than querystring-only changes) in v2.0. Enabling this
      will make URL authorization ineffective on image files.-->
    <add key="AllowURLRewriting" value="false" />

    <!-- (v2.0a+ only) Prevents use of cached files - useful for development when changing resizing algorithms. 
          Causes terrible performance - don't leave enabled.-->
    <add key="DiskCacheAlwaysInvalid" value="false"/>

    <!-- (v2.0b+ only) Prevents the cache cleanup routine from running. If you want to 
        manually purge the image cache yourself, and aren't worried about running out 
        of disk space via a DOS attack, you can disable this. Not advised. -->
    <add key="DisableCacheCleanup" value="false"/>

  </appSettings>
    <connectionStrings/>
    <system.web>
        <!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.

            Visual Basic options:
            Set strict="true" to disallow all data type conversions 
            where data loss can occur. 
            Set explicit="true" to force declaration of all variables.
        -->
        <compilation debug="false" strict="false" explicit="true">

        </compilation>
        <pages>
          <namespaces>
            <clear />
            <add namespace="System" />
            <add namespace="System.Collections" />
            <add namespace="System.Collections.Generic" />
            <add namespace="System.Collections.Specialized" />
            <add namespace="System.Configuration" />
            <add namespace="System.Text" />
            <add namespace="System.Text.RegularExpressions" />
            <add namespace="System.Web" />
            <add namespace="System.Web.Caching" />
            <add namespace="System.Web.SessionState" />
            <add namespace="System.Web.Security" />
            <add namespace="System.Web.Profile" />
            <add namespace="System.Web.UI" />
            <add namespace="System.Web.UI.WebControls" />
            <add namespace="System.Web.UI.WebControls.WebParts" />
            <add namespace="System.Web.UI.HtmlControls" />
          </namespaces>

        </pages>
        <!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
        <authentication mode="Windows" />
        <!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->


        
    </system.web>

</configuration>
